# 定义一个名为"Test and deploy"的工作流
name: Test and deploy

# 触发条件：当主分支有推送时触发工作流
on:
  push:
    branches:
      - main

# 工作流包含三个任务：测试、构建和部署
jobs:
  # 第一个任务：运行Lint和测试
  test:
    name: Run Lint and Test
    runs-on: ubuntu-latest # 使用最新的Ubuntu虚拟机运行

    steps:
      # 步骤1：检出代码库
      - name: Checkout repo
        uses: actions/checkout@v4

      # 步骤2：设置Node.js环境
      - name: Setup Node
        uses: actions/setup-node@v4

      # 步骤3：全局安装pnpm包管理器
      - name: Install pnpm
        run: npm install -g pnpm

      # 步骤4：使用pnpm安装依赖，确保锁定文件一致
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 步骤5：运行测试脚本
      - name: Run tests
        run: npm run test

  # 第二个任务：构建文档
  build:
    name: Build docs
    runs-on: ubuntu-latest # 使用最新的Ubuntu虚拟机运行
    # 该任务在测试任务完成后开始
    needs: test

    steps:
      # 步骤1：检出代码库
      - name: Checkout repo
        uses: actions/checkout@v4

      # 步骤2：设置Node.js环境
      - name: Setup Node
        uses: actions/setup-node@v4

      # 步骤3：全局安装pnpm包管理器
      - name: Install pnpm
        run: npm install -g pnpm

      # 步骤4：使用pnpm安装依赖，确保锁定文件一致
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 步骤5：构建文档
      - name: Build docs
        run: npm run docs:build

      # 步骤6：上传构建好的文档作为artifact
      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ./packages/docs/.vitepress/dist

  # 第三个任务：部署到GitHub Pages
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest # 使用最新的Ubuntu虚拟机运行
    # 该任务在构建任务完成后开始
    needs: build
    steps:
      # 步骤1：下载构建好的文档
      - name: Download docs
        uses: actions/download-artifact@v4
        with:
          name: docs

      # 步骤2：部署到GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # 使用存储在GitHub Secrets中的token进行部署
          github_token: ${{ secrets.DawnUI_TOKEN }}
          # 指定要发布的目录
          publish_dir: .
